<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/blog/" rel="alternate" type="text/html" /><updated>2019-11-15T22:54:06+00:00</updated><id>http://localhost:4000/blog/feed.xml</id><title type="html">Mario Dena Blog</title><subtitle>A Web-Developer's Blog</subtitle><author><name>Mario Dena</name></author><entry><title type="html">6 Great VS-Code Extensions</title><link href="http://localhost:4000/blog/tools/vscodeext1.html" rel="alternate" type="text/html" title="6 Great VS-Code Extensions" /><published>2019-11-12T00:00:00+00:00</published><updated>2019-11-12T00:00:00+00:00</updated><id>http://localhost:4000/blog/tools/vscode1</id><content type="html" xml:base="http://localhost:4000/blog/tools/vscodeext1.html">&lt;p&gt;VS-code is &lt;em&gt;(for me)&lt;/em&gt; the best text editor out there. Immediately after installing it I knew why it is so popular, it’s light, customizable and you can transform it into an IDE if you want to.&lt;/p&gt;

&lt;p&gt;Ever since I started my career as a developer &lt;em&gt;(not web-developer at first)&lt;/em&gt; I have tried different IDE’s and text editors. I first started using mono when working with C# then eclipse for Java, finally I switched to web-development, and tried some other text editors like brackets, sublime and atom. But, I think &lt;strong&gt;VS-Code has several advantages over other text-editors&lt;/strong&gt; for example the &lt;strong&gt;integrated terminal,&lt;/strong&gt; it’s incredible intuitive, has &lt;strong&gt;easy and configurable keyboard short-cuts&lt;/strong&gt;, and of course, the incredible amount of &lt;strong&gt;extensions&lt;/strong&gt; available is just something I can’t keep myself away from.&lt;/p&gt;

&lt;p&gt;So, If you are looking for some VS-Code extensions to make your life easier this are some of the ones I recommend. &lt;em&gt;(for web-development)&lt;/em&gt; .&lt;/p&gt;

&lt;h2 id=&quot;live-server&quot;&gt;Live server&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/nov-2019/vs1.png&quot; alt=&quot;&quot; class=&quot;postImageGeneral&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you are tired of reloading your web-browser to see your changes applied, this one is for you.
Not only does the extension host your page, it also &lt;strong&gt;updates it in real time,&lt;/strong&gt; so, every time you change a color, a block, or a font, everything will be updated accordingly&lt;/p&gt;

&lt;p&gt;I really recommend you to try this one out.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer&quot;&gt;Get it here!&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;auto-close-tag&quot;&gt;Auto Close Tag&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/nov-2019/vs2.png&quot; alt=&quot;&quot; class=&quot;postImageGeneral&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ok, so this is a small extension but it really make your life easier when working with code. 
What it does? Well exactly as the name implies every time you open a tag on your html file, the closing tag will be automatically added. So it will be easier to keep your HTML valid.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag&quot;&gt;Get it here!&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;auto-rename-tag&quot;&gt;Auto Rename Tag&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/nov-2019/vs3.png&quot; alt=&quot;&quot; class=&quot;postImageGeneral&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Just like the small one above, this one allows you to edit your tags more easily. If you start to edit the opening tag the closing tag will be edited at the same time!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag&quot;&gt;Get it here!&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;bracket-pair-colorizer&quot;&gt;Bracket Pair Colorizer&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/nov-2019/vs4.png&quot; alt=&quot;&quot; class=&quot;postImageGeneral&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This one improves readability for your code&lt;/strong&gt; by giving different colors to your brackets, curly braces and parenthesis depending on the level they are nested in. 
You can configure a list of colors, and also matching characters. It also draws a little line so you can clearly see where all your code is nested.&lt;/p&gt;

&lt;p&gt;If you really value readability, then try this one out.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2&quot;&gt;Get it here!&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;prettier---code-formatter&quot;&gt;Prettier - Code formatter&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/nov-2019/vs5.png&quot; alt=&quot;&quot; class=&quot;postImageGeneral&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now for a more robust extension we have prettier code formatter, &lt;strong&gt;this one is one I can’t live without.&lt;/strong&gt; It just make your code look more organized. You can also configure your code formatter to format on save or with a shortcut.&lt;/p&gt;

&lt;p&gt;Also it can be configured to work with your &lt;a href=&quot;https://prettier.io/docs/en/integrating-with-linters.html&quot;&gt;linter!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode&quot;&gt;Get it here!&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;intellisense-for-css--html&quot;&gt;IntelliSense for CSS &amp;amp; HTML&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/nov-2019/vs6.png&quot; alt=&quot;&quot; class=&quot;postImageGeneral&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you don’t know what &lt;a href=&quot;https://es.wikipedia.org/wiki/IntelliSense&quot;&gt;Intellisense&lt;/a&gt; is, let’s just say it’s autocomplete, but I recommend you to read a little bit about it cause it’s going to save you a lot of time when coding.
Sadly VS-Code doesn’t have support for Intellisense on CSS and HTML. Well this extension fixes that!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Zignd.html-css-class-completion&quot;&gt;Get it here!&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;With this six extensions you will have an easier time working on VS-Code. &lt;strong&gt;Of course this ones are just to get you started,&lt;/strong&gt; because some others out there are so robust they deserve their own review, but don’t worry I’m actually working on doing more in-depth reviews for more extensions.&lt;/p&gt;

&lt;p&gt;What extensions do you use that should have been included?&lt;/p&gt;</content><author><name>Mario Dena</name></author><category term="Tools" /><category term="CSS" /><category term="Tools" /><category term="HTML" /><category term="Javascript" /><summary type="html">VS-code is (for me) the best text editor out there. Immediately after installing it I knew why it is so popular, it’s light, customizable and you can transform it into an IDE if you want to.</summary></entry><entry><title type="html">Coding Challenges Part 1! -Video-</title><link href="http://localhost:4000/blog/coding/coding-challenges1.html" rel="alternate" type="text/html" title="Coding Challenges Part 1! -Video-" /><published>2019-11-08T00:00:00+00:00</published><updated>2019-11-08T00:00:00+00:00</updated><id>http://localhost:4000/blog/coding/coding-challenges</id><content type="html" xml:base="http://localhost:4000/blog/coding/coding-challenges1.html">&lt;p&gt;&lt;strong&gt;A coding challenge is a great way to test your skills&lt;/strong&gt; or simply refresh your memory on the language of choice. So I decided to solve some challenges and show you how I got the answer I’m presenting.&lt;/p&gt;

&lt;p&gt;This time, I will be solving &lt;a href=&quot;https://www.hackerrank.com/challenges/angry-professor/problem&quot; target=&quot;_blank&quot;&gt;“Angry Professor”&lt;/a&gt; an easy difficulty challenge on &lt;a href=&quot;https://www.hackerrank.com&quot; target=&quot;_blank&quot;&gt;Hackerrank.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This problem is a perfect introduction for me to show you an easy way to think about the problems found on some simple coding challenges. But &lt;strong&gt;please feel free to submit a coding challenge&lt;/strong&gt; on the comments or by &lt;a href=&quot;https://twitter.com/MarioDenaCode&quot; target=&quot;_blank&quot;&gt;twitter&lt;/a&gt; if you want to see me solving it, either to compare results or because you are stuck, and I might post a new video featuring your challenge.&lt;/p&gt;

&lt;p&gt;This time I will show you 3 different ways to solve the challenge and we will have a &lt;strong&gt;quick look on some interesting syntax and features from ES6 Javascript&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;div class=&quot;iframe-container&quot;&gt;
&lt;iframe width=&quot;540&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/NSa1-u3On5A&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;As you can see in the video, &lt;strong&gt;the real problem about this coding challenge is understanding the problem,&lt;/strong&gt; forgetting about writing code for a moment, and think about a solution. Then we translate that solution into code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Of course this is not a complete and correct way of doing things&lt;/strong&gt; I’m not covering methods like analyzing the complexity of algorithms or using the graph method.&lt;/p&gt;

&lt;p&gt;Anyway I hope all of you enjoyed the video and please, share any feedback or suggestions you might have to make my content better.&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;</content><author><name>Mario Dena</name></author><category term="Code" /><category term="Javascript" /><category term="Ruby" /><category term="Challenges" /><summary type="html">A coding challenge is a great way to test your skills or simply refresh your memory on the language of choice. So I decided to solve some challenges and show you how I got the answer I’m presenting.</summary></entry><entry><title type="html">HTML &amp;lt; head &amp;gt; for beginners</title><link href="http://localhost:4000/blog/html-css/about-head-tags.html" rel="alternate" type="text/html" title="HTML &lt; head &gt; for beginners" /><published>2019-10-31T00:00:00+00:00</published><updated>2019-10-31T00:00:00+00:00</updated><id>http://localhost:4000/blog/html-css/meta-tags</id><content type="html" xml:base="http://localhost:4000/blog/html-css/about-head-tags.html">&lt;p&gt;Have you tried to &lt;strong&gt;share a link of your web-page on social media&lt;/strong&gt; but your link display has no image or the description is not what you want? Fear no more! We will review some of the most important tags to make your website, &lt;em&gt;social media friendly&lt;/em&gt; and some other cool stuff.&lt;/p&gt;

&lt;p&gt;When you start off as a Web-Developer, you are prone to skip some basic stuff, like all what is all that content inside your &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag and what it does. Or what is worse, you can &lt;strong&gt;create the habit of forgetting about filling it all together&lt;/strong&gt; besides the most basic tags. &lt;em&gt;I’m looking at you HTML snippets&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This can be detrimental because really useful stuff happens on your &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; &lt;em&gt;pun intended&lt;/em&gt;…&lt;/p&gt;

&lt;h2 id=&quot;the-basics&quot;&gt;The basics&lt;/h2&gt;

&lt;p&gt;Just to take out of the way the most &lt;strong&gt;commonly used tags&lt;/strong&gt;…&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;charset&lt;/code&gt;: You need to define a &lt;a href=&quot;https://en.wikipedia.org/wiki/Character_encoding&quot; target=&quot;_blank&quot;&gt;character encoding&lt;/a&gt; for your website, not all browsers understand all encodings, so, the more widely a character encoding is used, you have a better chance that a browser will understand it.&lt;/p&gt;

&lt;p&gt;You will most likely be using one of this: ISO-8859-1 and &lt;strong&gt;UTF-8&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;: This one is used to display your title not on the content of your page but on the &lt;code class=&quot;highlighter-rouge&quot;&gt;tab&lt;/code&gt; of your browser, it’s also used for &lt;code class=&quot;highlighter-rouge&quot;&gt;SEO&lt;/code&gt; but that’s out of scope for now.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Example Title&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;viewport&lt;/code&gt;: Used for responsiveness, it defines the users visible area for your page and the initial scale at which it’ll be displayed, &lt;strong&gt;if you don’t use this tag your site will look very different and even ugly&lt;/strong&gt; on some devices.&lt;/p&gt;

&lt;p&gt;Definitely mandatory in this day and age.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stylesheet&lt;/code&gt;: This one is pretty much self explanatory and you will most likely always use it. You may use it, for example, to load your CSS with all your styling for the page.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;style.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;X-UA-Compatible&lt;/code&gt; This one is kind of optional, however it tells IE how to handle your content, not as important as the others, but nevertheless useful… maybe.&lt;/p&gt;

&lt;p&gt;You usually want to set it to &lt;code class=&quot;highlighter-rouge&quot;&gt;ie=edge&lt;/code&gt; It means that IE will try to use the newer technologies. &lt;em&gt;To be honest, I don’t see any reason to support IE anymore, but some companies do,&lt;/em&gt; so you might want to read a little bit more about it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ie=edge&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So, a basic &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; should look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ie=edge&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;style.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;moving-on-to-the-good-stuff&quot;&gt;Moving on to the good stuff&lt;/h2&gt;

&lt;p&gt;If you know how websites are loaded by the browser you might have learned to place all your &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; files at the end of your &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; to avoid locking the browser. This however I believe is an old workaround and an outdated method.&lt;/p&gt;

&lt;p&gt;So yeah, your &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags are now part of your &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; thanks to the &lt;code class=&quot;highlighter-rouge&quot;&gt;async&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;defer&lt;/code&gt; properties.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./main.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;defer&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What’s the difference? &lt;code class=&quot;highlighter-rouge&quot;&gt;async&lt;/code&gt; downloads your js file while continuing to parse your HTML and executes said script the moment it finish the download, while &lt;code class=&quot;highlighter-rouge&quot;&gt;defer&lt;/code&gt; does the same when downloading but waits to execute after the whole HTML document is parsed.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;icon&lt;/code&gt; A common question that can be found all around the internet. &lt;strong&gt;How to add a favicon icon to my site?&lt;/strong&gt;.
Well, that’s an easy one!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'icon'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'favicon.ico'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'image/x-icon'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Just remember: you will need your &lt;code class=&quot;highlighter-rouge&quot;&gt;favicon.ico&lt;/code&gt; file at the root folder of your site &lt;em&gt;(it can be anywhere, really)&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;open-graph-protocol&quot;&gt;Open graph protocol&lt;/h3&gt;

&lt;p&gt;This is used to construct your facebook cards &lt;strong&gt;(many sites use this!)&lt;/strong&gt; this cards are shown when you paste your link on social media and displays an image some description, title, etc…, &lt;strong&gt;This works on chats, instagram, even slack and discord!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The following are &lt;strong&gt;tags I use to make my blog posts social friendly&lt;/strong&gt;  you can read more about it on the &lt;a href=&quot;https://ogp.me/&quot; target=&quot;_blank&quot;&gt;Open graph protocol documentation.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;og:title&lt;/code&gt; Similar to our title tag this one will be the title displayed on your card when you share your link.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Title Here&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;og:image&lt;/code&gt; The image to display in your card, it can actually be any image in your page’s folder structure.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:image&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://example.com/image.jpg&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;og:description&lt;/code&gt; If you want to give a description to your card &lt;em&gt;(different than the default one)&lt;/em&gt; you can write it here.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:description&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Description Here&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;what-about-twitter&quot;&gt;What about Twitter?&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Twitter has its own protocol for it’s cards,&lt;/strong&gt; you can check all of them in the &lt;a href=&quot;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/abouts-cards&quot; target=&quot;_blank&quot;&gt;documentation.&lt;/a&gt; This are the ones I use:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;twitter:card&lt;/code&gt; this is going to define what kind of twitter card will be displayed, I usually use “summary” type.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:card&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;summary&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;twitter:title&lt;/code&gt; works pretty much the same as &lt;code class=&quot;highlighter-rouge&quot;&gt;og:title&lt;/code&gt; and remember the values can be different from one to the other.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Page Title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;twitter:description&lt;/code&gt; same as &lt;code class=&quot;highlighter-rouge&quot;&gt;og:description&lt;/code&gt; however, &lt;strong&gt;this tag content has to be less than 200 characters long.&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:description&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Page description&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;twitter:image&lt;/code&gt; again this one has some requirements different from its open graph counterpart. &lt;strong&gt;This image need to be at least 120 x 120 pixels in order to work.&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:image&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.example.com/image.jpg&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;My final HTML &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag template looks something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ie=edge&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Imports --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;style.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'icon'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/favicon.ico'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'image/x-icon'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./main.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;defer&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Open Graph card --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Title Here&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:image&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://example.com/image.jpg&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:description&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Description Here&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Twitter card--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:card&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;summary&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Page Title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:description&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Page description&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:image&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.example.com/image.jpg&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;the-result&quot;&gt;The result:&lt;/h3&gt;

&lt;p&gt;With this information you can change this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/oct-2019/Headers1.png&quot; alt=&quot;exp&quot; class=&quot;postImageGeneral&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Into this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/oct-2019/Headers2.png&quot; alt=&quot;exp2&quot; class=&quot;postImageGeneral&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And that’s all! &lt;em&gt;Just keep in mind there are other tags that I don’t generally use.&lt;/em&gt; All of them can be found in the respective documentation for &lt;a href=&quot;https://ogp.me/&quot; target=&quot;_blank&quot;&gt;open graph&lt;/a&gt; and &lt;a href=&quot;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/abouts-cards&quot; target=&quot;_blank&quot;&gt;twitter cards&lt;/a&gt;, remember to visit them in order to be up-to-date with any changes.&lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;</content><author><name>Mario Dena</name></author><category term="HTML/CSS" /><category term="CSS" /><category term="Tools" /><category term="HTML" /><category term="JS" /><summary type="html">Have you tried to share a link of your web-page on social media but your link display has no image or the description is not what you want? Fear no more! We will review some of the most important tags to make your website, social media friendly and some other cool stuff.</summary></entry><entry><title type="html">What is BEM?!</title><link href="http://localhost:4000/blog/tools/what-is-bem-1.html" rel="alternate" type="text/html" title="What is BEM?!" /><published>2019-10-23T00:00:00+00:00</published><updated>2019-10-23T00:00:00+00:00</updated><id>http://localhost:4000/blog/tools/what-is-bem-1</id><content type="html" xml:base="http://localhost:4000/blog/tools/what-is-bem-1.html">&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BEM&lt;/code&gt; stands for &lt;strong&gt;Block-Element-Modifier&lt;/strong&gt; and it’s basically a &lt;a href=&quot;https://en.wikipedia.org/wiki/Naming_convention/&quot; target=&quot;_blank&quot;&gt;naming convention&lt;/a&gt; or set of rules you can use to name your &lt;code class=&quot;highlighter-rouge&quot;&gt;HTML elements&lt;/code&gt; &lt;em&gt;(with classes)&lt;/em&gt;. Since it’s not a framework or a piece of software, you can simply start using it now.&lt;/p&gt;

&lt;p&gt;You can watch &lt;a href=&quot;https://www.youtube.com/watch?v=1fW8v4ErK10&quot; target=&quot;_blank&quot;&gt;this video&lt;/a&gt; for a quick run-down.&lt;/p&gt;

&lt;p&gt;Simple as it sounds, &lt;strong&gt;it’s a fantastic tool&lt;/strong&gt;. You can use and &lt;em&gt;modify*&lt;/em&gt; it to your needs. And if used right, you will get &lt;strong&gt;clean, readable, reusable and easy to maintain&lt;/strong&gt; code, both for your &lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt; and your &lt;code class=&quot;highlighter-rouge&quot;&gt;CSS&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;so-what-bem-can-do-for-you&quot;&gt;So, what BEM can do for you?&lt;/h2&gt;

&lt;p&gt;Let’s say we want to make a &lt;code class=&quot;highlighter-rouge&quot;&gt;navbar&lt;/code&gt; and we have our general layout looking like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&amp;gt;&amp;lt;p&amp;gt;&lt;/span&gt;Sign in&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&amp;gt;&amp;lt;p&amp;gt;&lt;/span&gt;Action&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;logo&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can always try to be specific with our &lt;a href=&quot;https://www.sitepoint.com/css-selectors/&quot; target=&quot;_blank&quot;&gt;selectors&lt;/a&gt;, and style doing something similar to this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However as the files grow bigger &lt;em&gt;(both HTML and CSS)&lt;/em&gt; you’ll have to remember what is what the whole time, and &lt;strong&gt;that will be a problem in the long run.&lt;/strong&gt; As a student, I learned we should use classes for styling, &lt;a href=&quot;https://css-tricks.com/almanac/selectors/i/id/&quot; target=&quot;_blank&quot;&gt;never use IDs for styling&lt;/a&gt; and some general &lt;a href=&quot;https://csswizardry.com/2012/11/code-smells-in-css/&quot; target=&quot;_blank&quot;&gt;best practices&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;menuList&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    ......&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There &lt;em&gt;seems&lt;/em&gt; to be nothing wrong with the code above, but, what if you have more than one &lt;code class=&quot;highlighter-rouge&quot;&gt;menuList&lt;/code&gt; on your website? What if we want &lt;em&gt;them&lt;/em&gt; to look different?&lt;/p&gt;

&lt;p&gt;Then we have to be more specific, and use less generic but equally descriptive names. And here is where &lt;code class=&quot;highlighter-rouge&quot;&gt;BEM&lt;/code&gt; will help us out.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mainNavBar&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mainNavBar__menuList&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    ...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.mainNavBar&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100vw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;45px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.mainNavBar__menuList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So we name our &lt;code class=&quot;highlighter-rouge&quot;&gt;block&lt;/code&gt; with a descriptive name, and use double underscores for our elements &lt;code class=&quot;highlighter-rouge&quot;&gt;__element&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The code is clean and easy to maintain, even if I come back to it a month or a year after writing it, &lt;strong&gt;I would know just by reading the names what every part of my code represents.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;naming-hierarchy-is-a-bit-different&quot;&gt;Naming hierarchy is a bit different.&lt;/h2&gt;

&lt;p&gt;Ok! Now let’s get into something &lt;em&gt;really&lt;/em&gt; interesting about &lt;code class=&quot;highlighter-rouge&quot;&gt;BEM&lt;/code&gt;. What would you do with our &lt;code class=&quot;highlighter-rouge&quot;&gt;li&lt;/code&gt; elements? Well, you might be inclined to do something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mainNavBar&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mainNavBar__menuList&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mainNavBar__menuList__menuItem&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    ...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;While the code above would work, we have to remember, &lt;strong&gt;in BEM the &lt;a href=&quot;http://webreference.com/html/rendering/index-2.html&quot; target=&quot;_blank&quot;&gt;hierarchy&lt;/a&gt; is defined by our naming standard&lt;/strong&gt; and not by our HTML &lt;em&gt;(at least not as much)&lt;/em&gt;. So we can either leave it as a &lt;code class=&quot;highlighter-rouge&quot;&gt;li&lt;/code&gt; element or we could do, this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mainNavBar&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mainNavBar__menuList&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mainNavBar__menuItem&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    ...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.mainNavBar&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100vw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;45px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.mainNavBar__menuList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.mainNavBar__menuItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What I love about this approach is we can get &lt;strong&gt;single class elements&lt;/strong&gt; for styling, while keeping everything organized. However, as our site grows &lt;em&gt;(or if we want to go crazy with styling)&lt;/em&gt; we will find ourselves in need of something even more specific, and here is where modifiers come in handy.&lt;/p&gt;

&lt;h2 id=&quot;using-modifiers-and-modding-bem&quot;&gt;Using modifiers and modding BEM!&lt;/h2&gt;

&lt;p&gt;Imagine we want only one element in our list to be in &lt;em&gt;italics&lt;/em&gt;. The &lt;code class=&quot;highlighter-rouge&quot;&gt;BEM&lt;/code&gt; way to do it is with something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mainNavBar&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mainNavBar__menuList&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mainNavBar__menuItem&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mainNavBar__menuItem mainNavBar__menuItem--italics&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    ...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.mainNavBar&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100vw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;45px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.mainNavBar__menuList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.mainNavBar__menuItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.mainNavBar__menuItem--italics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;italic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So, now we have our &lt;code class=&quot;highlighter-rouge&quot;&gt;block&lt;/code&gt; our &lt;code class=&quot;highlighter-rouge&quot;&gt;__element&lt;/code&gt; and following the double dash standard our &lt;code class=&quot;highlighter-rouge&quot;&gt;--modifier&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What’s so cool about this, and what I love the most, is that we can &lt;em&gt;bend&lt;/em&gt; the rules a little bit. &lt;strong&gt;This is entirely a personal preference&lt;/strong&gt; and my way to &lt;em&gt;(sometimes)&lt;/em&gt; deal with my modifiers.&lt;/p&gt;

&lt;p&gt;So, if my modifier is so simple &lt;em&gt;(making changes to the font style)&lt;/em&gt;, I then add it to my CSS along with all my helper classes like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.--italics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;italic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.--bold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now we are not following the &lt;code class=&quot;highlighter-rouge&quot;&gt;BEM&lt;/code&gt; standards, but &lt;strong&gt;we made our own modification,&lt;/strong&gt; &lt;em&gt;(for more complicated styles I do follow BEM)&lt;/em&gt; and our &lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt; is clean and has great &lt;a href=&quot;https://en.wikipedia.org/wiki/Readability&quot; target=&quot;_blank&quot;&gt;readability&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mainNavBar&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mainNavBar__menuList&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mainNavBar__menuItem&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mainNavBar__menuItem --italics&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    ...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;in-conclusion&quot;&gt;In conclusion…&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;I find it amazing that it’s so easy and it offers so much.&lt;/strong&gt; Our code is readable, easy to maintain and we have a lot of &lt;a href=&quot;https://en.wikiversity.org/wiki/Visual_Basic_.NET/Reusable_Code&quot; target=&quot;_blank&quot;&gt;reusable code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Of course, there are other methodologies to keep your code clean like &lt;a href=&quot;http://smacss.com/&quot; target=&quot;_blank&quot;&gt;SMACSS&lt;/a&gt; or &lt;a href=&quot;https://github.com/nemophrost/atomic-css/&quot; target=&quot;_blank&quot;&gt;Atomic&lt;/a&gt;, however, &lt;code class=&quot;highlighter-rouge&quot;&gt;BEM&lt;/code&gt; is a super simple, easy and powerful tool anyone can start using from day one. And if you add &lt;a href=&quot;https://sass-lang.com/&quot; target=&quot;_blank&quot;&gt;SASS&lt;/a&gt; to it… Well, that’s just &lt;strong&gt;a thing of beauty.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So, if you are learning CSS and HTML, or if you have some intermediate knowledge but struggle with organizing your code, &lt;strong&gt;I recommend you to go and read the &lt;a href=&quot;http://getbem.com/&quot; target=&quot;_blank&quot;&gt;BEM docs&lt;/a&gt; and start implementing it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Remember you can do small modifications to the rules as you see fit, however you should stick to the standard until you master BEM.&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/oct-2019/memeBEM.jpg&quot; alt=&quot;meme&quot; class=&quot;postImageGeneral&quot; /&gt;&lt;/p&gt;</content><author><name>Mario Dena</name></author><category term="Tools" /><category term="CSS" /><category term="Tools" /><category term="HTML" /><category term="BEM" /><summary type="html">BEM stands for Block-Element-Modifier and it’s basically a naming convention or set of rules you can use to name your HTML elements (with classes). Since it’s not a framework or a piece of software, you can simply start using it now.</summary></entry></feed>